function M77 = combineQdotP(C)
	% this is for qslash (for 4-quark operators) scheme
	M72 = cell(2,1); % (1,1):even part (2,1):odd part

	run('conf.m');

	nBlock = size(C{1,1},2) / 144;

	% 1. even part:
	tmp = cell(10,1); % only s-bar{d}-u-bar{u}

 	% 1.1 even Q1
  tmp{1,1} = (+1) * C{cIdxMap('VV'),1} +...
  	         (+1) * C{cIdxMap('AA'),1} +...
  	         (-1) * C{cIdxMap('VV'),3} +...
  	         (-1) * C{cIdxMap('AA'),3} ;

 	% 1.2 even Q2
  tmp{2,1} = (+1) * C{cIdxMap('VV'),2} +...
  	         (+1) * C{cIdxMap('AA'),2} +...
  	         (-1) * C{cIdxMap('VV'),4} +...
  	         (-1) * C{cIdxMap('AA'),4} ;
	
	% 1.3 even Q3
  tmp{3,1} = (+1) * C{cIdxMap('VV'),1} +...
  	         (+1) * C{cIdxMap('AA'),1} +...
  	         (-3) * C{cIdxMap('VV'),3} +...
  	         (-3) * C{cIdxMap('AA'),3} +...
  	         (+2) * C{cIdxMap('VV'),5} +...
  	         (+2) * C{cIdxMap('AA'),5} ;

 	% 1.4 even Q5
  tmp{5,1} = (+1) * C{cIdxMap('VV'),1} +...
  	         (-1) * C{cIdxMap('AA'),1} +...
  	         (-3) * C{cIdxMap('VV'),3} +...
  	         (+3) * C{cIdxMap('AA'),3} +...
  	         (+2) * C{cIdxMap('VV'),5} +...
  	         (-2) * C{cIdxMap('AA'),5} ;

 	% 1.5 even Q6
  tmp{6,1} = (+1) * C{cIdxMap('VV'),2} +...
  	         (-1) * C{cIdxMap('AA'),2} +...
  	         (-3) * C{cIdxMap('VV'),4} +...
  	         (+3) * C{cIdxMap('AA'),4} +...
  	         (+2) * C{cIdxMap('VV'),6} +...
  	         (-2) * C{cIdxMap('AA'),6} ;
 
  % 1.6 even Q7
  tmp{7,1} = (+1) * C{cIdxMap('VV'),1} +...
  	         (-1) * C{cIdxMap('AA'),1} +...
  	         (-1) * C{cIdxMap('VV'),5} +...
  	         (+1) * C{cIdxMap('AA'),5} ;
 
  % 1.7 even Q8
  tmp{8,1} = (+1) * C{cIdxMap('VV'),2} +...
  	         (-1) * C{cIdxMap('AA'),2} +...
  	         (-1) * C{cIdxMap('VV'),6} +...
  	         (+1) * C{cIdxMap('AA'),6} ;
 
	% 1.8 even part summary
	M72{1,1} = cell(7,2);
	M72{1,1}{1,1} =                 3 * tmp{1,1} + 2 * tmp{2,1} - tmp{3,1};
	M72{1,1}{2,1} = (1.0 / 5.0) * ( 2 * tmp{1,1} - 2 * tmp{2,1} + tmp{3,1});
	M72{1,1}{3,1} = (1.0 / 5.0) * (-3 * tmp{1,1} + 3 * tmp{2,1} + tmp{3,1});
	M72{1,1}{4,1} = tmp{5,1};
	M72{1,1}{5,1} = tmp{6,1};
	M72{1,1}{6,1} = tmp{7,1};
	M72{1,1}{7,1} = tmp{8,1};

	% 2. odd part:
	tmp = cell(10,2); % (:,1) are using E1 projection, (:,2) are using E3 projection

 	% 2.1 odd Q1
  tmp{1,1} = (-1) * C{cIdxMap('AV'),1} +...
  	         (-1) * C{cIdxMap('VA'),1} +...
  	         (+1) * C{cIdxMap('AV'),3} +...
  	         (+1) * C{cIdxMap('VA'),3} ;

 	% 2.2 odd Q2
  tmp{2,1} = (-1) * C{cIdxMap('AV'),2} +...
  	         (-1) * C{cIdxMap('VA'),2} +...
  	         (+1) * C{cIdxMap('AV'),4} +...
  	         (+1) * C{cIdxMap('VA'),4} ;

 	% 2.3 odd Q3
  tmp{3,1} = (-1) * C{cIdxMap('AV'),1} +...
  	         (-1) * C{cIdxMap('VA'),1} +...
  	         (+3) * C{cIdxMap('AV'),3} +...
  	         (+3) * C{cIdxMap('VA'),3} +...
  	         (-2) * C{cIdxMap('AV'),5} +...
  	         (-2) * C{cIdxMap('VA'),5} ;

 	% 2.4 odd Q5
  tmp{5,1} = (-1) * C{cIdxMap('AV'),1} +...
  	         (+1) * C{cIdxMap('VA'),1} +...
  	         (+3) * C{cIdxMap('AV'),3} +...
  	         (-3) * C{cIdxMap('VA'),3} ;
 
  % 2.5 odd Q6
  tmp{6,1} = (-1) * C{cIdxMap('AV'),2} +...
  	         (+1) * C{cIdxMap('VA'),2} +...
  	         (+3) * C{cIdxMap('AV'),4} +...
  	         (-3) * C{cIdxMap('VA'),4} ;
 
	% 2.6 odd Q7
	tmp{7,1} = (-1) * C{cIdxMap('AV'),1} +...
	        	 (+1) * C{cIdxMap('VA'),1} ;

 	% 2.7 odd Q8
 	tmp{8,1} = (-1) * C{cIdxMap('AV'),2} +...
 		         (+1) * C{cIdxMap('VA'),2} ;

	% 2.8 odd part summary
	M72{2,1} = cell(7,2);
	M72{2,1}{1,1} =                 3 * tmp{1,1} + 2 * tmp{2,1} - tmp{3,1};
	M72{2,1}{2,1} = (1.0 / 5.0) * ( 2 * tmp{1,1} - 2 * tmp{2,1} + tmp{3,1});
	M72{2,1}{3,1} = (1.0 / 5.0) * (-3 * tmp{1,1} + 3 * tmp{2,1} + tmp{3,1});
	M72{2,1}{4,1} = tmp{5,1};
	M72{2,1}{5,1} = tmp{6,1};
	M72{2,1}{6,1} = tmp{7,1};
	M72{2,1}{7,1} = tmp{8,1};

	% 3 project onto 7-by-7 M77
	M77 = cell(nBlock,2);
	for i = 1:nBlock
		for eo = 1:2 % 1:even 2:odd
			M77{i,eo} = zeros(7,7);

			% 3.1 (27,1) operator
			for Q = 1
				M77{i,eo}(Q,1) = contract_tensor(contract_color(M72{eo,1}{Q,1}(:,(i-1)*144+[1:144])),'LL', eo, 'QSlash', p1-p2);
			end

			% 3.2 (8,1) operators
			for Q = 2:5
				M77{i,eo}(Q,2) = contract_tensor(contract_color    (M72{eo,1}{Q,1}(:,(i-1)*144+[1:144])),'LL', eo, 'QSlash', p1-p2);
				M77{i,eo}(Q,3) = contract_tensor(contract_color_mix(M72{eo,1}{Q,1}(:,(i-1)*144+[1:144])),'LL', eo, 'QSlash', p1-p2);
				M77{i,eo}(Q,4) = contract_tensor(contract_color    (M72{eo,1}{Q,1}(:,(i-1)*144+[1:144])),'LR', eo, 'QSlash', p1-p2);
				M77{i,eo}(Q,5) = contract_tensor(contract_color_mix(M72{eo,1}{Q,1}(:,(i-1)*144+[1:144])),'LR', eo, 'QSlash', p1-p2);
			end

			% 3.3 (8,8) operators
			for Q = 6:7
				M77{i,eo}(Q,6) = contract_tensor(contract_color    (M72{eo,1}{Q,1}(:,(i-1)*144+[1:144])),'LR', eo, 'QSlash', p1-p2);
				M77{i,eo}(Q,7) = contract_tensor(contract_color_mix(M72{eo,1}{Q,1}(:,(i-1)*144+[1:144])),'LR', eo, 'QSlash', p1-p2);
			end
		end
	end

	clearvars -except M77;
end
